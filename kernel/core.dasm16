#include "AtlasOS 0.6.2"

#include "../include/kernel.inc"

SET PC, kernel_boot

; Kernel
#include "drivers.dasm16"
#include "filesystem.dasm16"
#include "graphics.dasm16"
#include "interrupts.dasm16"
#include "library.dasm16"
#include "memory.dasm16"
#include "messages.dasm16"
#include "process.dasm16"
#include "math.dasm16"

:kernel_boot
JSR bios_boot


; clear screen (for emulator)
JSR clear

; Display the logo
SET A, text_logo
JSR text_out

; Bootmessage
SET A, text_start
JSR text_out

; Reserve all operating system code including api space
SET X, 0
:code_mem
IFG X, os_content_end
    SET PC, code_mem_end
SET A, X
JSR page_reserve
ADD X, 1024
SET PC, code_mem
:code_mem_end


; Reserve stack-memory
SET A, 0xFFFF
JSR page_reserve



SET X, 0

; Copy the API.
SET B, 0x1000
SET A, api_start
SET C, api_end
SUB C, A
JSR mem_copy

; Clear out a few things
SET [keyboard_buffers_exclusive], 0
JSR keyboard_unregister_all

; OS ready message
SET A, text_start_ok
JSR text_out

; Set the interrupt handler last since booting has finished
IAS kernel_interrupt_handler
; Main kernel loop
:kernel_loop

	; Check if the kernel is the only running process, if so start the shell
	JSR kernel_watchdog_checkalone

	; Release back to other running processes
	INT [proc_suspend_int]

    SET PC, kernel_loop

; Watchdog to ensure the shell is always running even if in the background
:kernel_watchdog_checkalone
	SET A, proc_table
	ADD A, 4
	IFN [A], 2
	SET PC, kernel_watchdog_loadshell

	SET PC, POP
:kernel_watchdog_loadshell
	SET A, AtlasShell
	SET B, AtlasShell_end
	SUB B, AtlasShell
	JSR proc_load
	SET PC, POP
	
:kernel_end
	SET PC, kernel_end
	
:api_padding
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
dat "                                                                                                                                "
:api_padding_end
	
; Apps
:os_content
#include "../apps/AtlasShell.dasm16"
#include "../apps/AtlasText.dasm16"
#include "../apps/apps.dasm16"

; Virtual Filesystem
#include "../misc/vfs.dasm16"
:os_content_end
	